
<div class="container-fluid">
     <div id="searchContainer"> <!--Bill, this had a class of "row", but that caused margin issues-->
          <div>
          <!--<div class="col-md-12">-->
               <form action="/spaces/search/" method="GET" class="form-inline">
                    <input type="text" name="city" placeholder="Enter a City" class="form-control inputBox">
                    <button class="btn btn-success searchButton" type="submit"><span class="glyphicon glyphicon-search"></span> Search</button>
               </form>
               <a class="btn btn-success modalButton" href="#" data-toggle="modal" data-target="#searchModal">Advanced Search</a>
          </div>
          <!--</div>-->
     </div>
</div>

<div class="container-fluid results">
	<div class="row">
		<div class="col-xs-12 col-sm-5 col-md-4" id="searchList">
			{{#if user}}
				{{#each user.space}}
					<div class="searchResult">
						<img src="{{this.photo}}" height="150px" width="150px" class="spacePic">
						<p class="descriptionAll1"><span class="descriptionFirst">Address: </span><a href="/space/{{this.id}}" > {{this.address}}</a></p>
						<p class="descriptionAll1"><span class="descriptionFirst">City: </span>{{this.city}}, {{this.state}}</p>
						<p class="descriptionAll1"><span class="descriptionFirst">Zip: </span>{{this.zipcode}}</p>
						<p class="descriptionAll1"><span class="descriptionFirst">Cost: </span>${{this.price}} / month</p>
						<p class="descriptionAll1"><span class="descriptionFirst">Available From: </span> {{this.from}}</p>
                              <p class="descriptionAll1"><span class="descriptionFirst">Available Until: </span> {{this.to}}</p>
					</div>
				{{/each}}
			{{else}}
				{{#each space}}
					<div class="searchResult result">
						<img src="{{this.photo}}" height="150px" width="150px" class="spacePic">
                              <p class="descriptionAll1"><span class="descriptionFirst">Address: </span><a href="/space/{{this.id}}" > {{this.address}}</a></p>
                              <p class="descriptionAll1"><span class="descriptionFirst">City: </span>{{this.city}}, {{this.state}}</p>
                              <p class="descriptionAll1"><span class="descriptionFirst">Zip: </span>{{this.zipcode}}</p>
                              <p class="descriptionAll1"><span class="descriptionFirst">Cost: </span>${{this.price}} / month</p>
                              <p class="descriptionAll1"><span class="descriptionFirst">Available From: </span> {{this.from}}</p>
                              <p class="descriptionAll1"><span class="descriptionFirst">Available Until: </span> {{this.to}}</p>
						<!--<h5>{{this.type}}</h5>
						<a href="/space/{{this.id}}"> <h5>Address: {{this.address}}</h5></a>
						<h5>{{this.city}}, {{this.state}}</h5>
						<h5>{{this.zipcode}}</h5>
						<h5>${{this.price}} / month</h5>
						<h5>Available from <strong>{{this.from}}</strong> until <strong>{{this.to}}</strong></h5>-->
					</div>
				{{/each}}
			{{/if}}
		</div>
		<div class="col-xs-12 col-sm-7 col-md-8 gmap">
			<div class="form-style-8" id="map"></div>
		</div>
		<div id="searchModal" class="modal fade">
           <form action="/spaces/search/" method="GET" class="form-inline">
                <input type="text" name="city" placeholder="Enter a City" class="form-control inputBox">
                <input type="text" name="zipcode" placeholder="Enter a Zipcode" class="form-control inputBox">
                <select name="type" class="form-control inputBox">
                	<option selected disabled>Select a Type</option>
                	<option>Attic</option>
                	<option>Basement</option>
                	<option>Closet</option>
                	<option>Garage</option>
                	<option default>Shed</option>
                	<option>Warehouse</option>
                </select>
                <select name="sort" class="form-control inputBox">
                	<option selected disabled>Sort by</option>
                	<option>Distance</option>
                	<option>Price</option>
                </select>
                <select name="limit" class="form-control inputBox">
                	<option selected disabled># of Results</option>
                	<option>10</option>
                	<option>20</option>
                	<option>50</option>
                </select>
                <button class="btn btn-success searchButton" type="submit"><span class="glyphicon glyphicon-search"></span> Search</button>
           </form>
		</div>
	</div>
</div>
<script type="text/javascript">
var map;
var geocoder;

function createMap(lat, lng){
	if(lat == undefined || lng == undefined){
		lat = 30.2672;
		lng = -97.7431;
	}
	map = new google.maps.Map(document.getElementById('map'), {
		center: {lat: lat, lng: lng},
		zoom: 11
	});

	geocoder = new google.maps.Geocoder();

	{{#if user}}
		{{#each user.space}}
			var address = "{{this.address}}";
			var origin = new google.maps.LatLng(lat, lng);
			var service = new google.maps.DistanceMatrixService();

			service.getDistanceMatrix(
				{
					origins: [origin],
					destinations: [address],
					travelMode: 'DRIVING',
					unitSystem: google.maps.UnitSystem.IMPERIAL
				}, function callback(response, status){

				var distance = response.rows[0].elements[0].distance.text;

				geocoder.geocode({'address': response.destinationAddresses[0]}, function(results, status){
					if(status == 'OK'){
						var markerInfo = '<div class="markerInfo" style="width: 200px, height:200px">' +
						'{{this.type}}<br>{{this.address}}<br>${{this.price}} / month' +
						'<br>' + distance + ' away<br><a href="/space/{{this.id}}">Details</a>';


						var infoWindow = new google.maps.InfoWindow({
							content: markerInfo
						});

						var markerTitle = "{{this.type}}";

						var label = "{{this.type}}"[0];

						var marker = new google.maps.Marker({
							map: map,
							position: results[0].geometry.location,
							label: label,
							title: markerTitle
						});

						marker.addListener('click', function(){
							infoWindow.open(map, marker);
						});
					}
				});
			});
		{{/each}}
	{{else}}
		{{#each space}}
			var address = "{{this.address}}";
			var origin = new google.maps.LatLng(lat, lng);
			var service = new google.maps.DistanceMatrixService();

			service.getDistanceMatrix(
				{
					origins: [origin],
					destinations: [address],
					travelMode: 'DRIVING',
					unitSystem: google.maps.UnitSystem.IMPERIAL
				}, function callback(response, status){

				var distance = response.rows[0].elements[0].distance.text;

				geocoder.geocode({'address': response.destinationAddresses[0]}, function(results, status){
					if(status == 'OK'){
						var markerInfo = '<div class="markerInfo" style="width: 200px, height:200px">' +
						'{{this.type}}<br>{{this.address}}<br>${{this.price}} / month' +
						'<br>' + distance + '<br><a href="/space/{{this.id}}">Details</a>';


						var infoWindow = new google.maps.InfoWindow({
							content: markerInfo
						});

						var markerTitle = "{{this.type}}";

						var label = "{{this.type}}"[0];

						var marker = new google.maps.Marker({
							map: map,
							position: results[0].geometry.location,
							label: label,
							title: markerTitle
						});

						marker.addListener('click', function(){
							infoWindow.open(map, marker);
						});
					}
				});
			});
		{{/each}}
	{{/if}}
}

function initMap(){

	var defaultLat;
	var defaultLng;

	var geoSuccess = function(position){
		defaultLat = position.coords.latitude;
		defaultLng = position.coords.longitude;
		createMap(defaultLat, defaultLng);
	};

	var geoError = function(error){
		console.log("Error occurred. Error code: " + error.code);
	};

	navigator.geolocation.getCurrentPosition(geoSuccess, geoError);
}

</script>
<script async defer
src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBJYlT151x978VdI9hNduUpuHR8rejvxdw&callback=initMap"></script>